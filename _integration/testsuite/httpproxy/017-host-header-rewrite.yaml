# Copyright Project Contour Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License.  You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
# License for the specific language governing permissions and limitations
# under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingress-conformance-echo
$apply: fixture

---

apiVersion: v1
kind: Service
metadata:
  name: ingress-conformance-echo
$apply: fixture

---

apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: hostrewrite
spec:
  virtualhost:
    fqdn: hostrewrite.projectcontour.io
  routes:
  - services:
    - name: ingress-conformance-echo
      port: 80
    requestHeadersPolicy:
      set:
      - name: Host
        value: rewritten.com

---

import data.contour.resources

fatal_proxy_is_not_valid[msg] {
  name := "hostrewrite"
  proxy := resources.get("httpproxies", name)
  status := object.get(proxy, "status", {})

  object.get(status, "currentStatus", "") != "valid"

  msg := sprintf("HTTP proxy for '%s' is not valid\n%s", [
    name, yaml.marshal(status)
  ])
}

---

import data.contour.http.client
import data.contour.http.client.url
import data.contour.http.expect
import data.contour.http.response
import data.builtin.result

Response := client.Get({
  "url": url.http("/echo"),
  "headers": {
    "Host": "hostrewrite.projectcontour.io",
    "User-Agent": client.ua("host-rewrite-test"),
  },
})

check_for_status_code [msg] {
  msg := expect.response_status_is(Response, 200)
}

check_for_host_header [msg] {
  response_body := response.body(Response)
  response_host := object.get(response_body, "host", "")
  response_host != "rewritten.com"
  msg := result.Errorf("expected response host %s to be rewritten to rewritten.com", [response_host])
}
